# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_Private_Modules/00_test_example.ipynb.

# %% auto 0
__all__ = ['nodes', 'bars', 'point_loads', 'load_groups', 'dfs']

# %% ../nbs/03_Private_Modules/00_test_example.ipynb 2
# Copyright Â© 2023-2024  IfcTruss Contributors
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# %% ../nbs/03_Private_Modules/00_test_example.ipynb 4
import pandas as pd

# %% ../nbs/03_Private_Modules/00_test_example.ipynb 5
nodes = pd.DataFrame(
    {
        "Node": pd.Series([2, 1, 3, 4], dtype=int),
        "Coordinate_X": pd.Series([0, 0, -4e3, -4e3], dtype=float),
        "Coordinate_Y": pd.Series([0, 0, 0, 0], dtype=float),
        "Coordinate_Z": pd.Series([3e3, 0, 3e3, 6e3], dtype=float),
        "Translational_X": pd.Series([0, 1, 1, 1], dtype=bool),
        "Translational_Y": pd.Series([1, 1, 1, 1], dtype=bool),
        "Translational_Z": pd.Series([0, 1, 1, 1], dtype=bool),
    }
)

# %% ../nbs/03_Private_Modules/00_test_example.ipynb 7
bars = pd.DataFrame(
    {
        "Bar": pd.Series([1, 2, 3], dtype=int),
        "Start_node": pd.Series([2, 2, 2], dtype=int),
        "End_node": pd.Series([1, 3, 4], dtype=int),
        "Cross-sectional_area": pd.Series([1e3, 1e3, 1e3], dtype=float),
        "Modulus_of_elasticity": pd.Series([1e3, 1e3, 1e3], dtype=float),
    }
)

# %% ../nbs/03_Private_Modules/00_test_example.ipynb 9
point_loads = pd.DataFrame(
    {
        "Point_Load": pd.Series(
            [
                1,
            ],
            dtype=int,
        ),
        "Node": pd.Series(
            [
                2,
            ],
            dtype=int,
        ),
        "Force_X": pd.Series(
            [
                100e3,
            ],
            dtype=float,
        ),
        "Force_Y": pd.Series(
            [
                0,
            ],
            dtype=float,
        ),
        "Force_Z": pd.Series(
            [
                -100e3,
            ],
            dtype=float,
        ),
    }
)

# %% ../nbs/03_Private_Modules/00_test_example.ipynb 11
load_groups = pd.DataFrame(
    {
        "Load_Group": pd.Series(
            [
                1,
            ],
            dtype=int,
        ),
        "Point_Load": pd.Series(
            [
                1,
            ],
            dtype=int,
        ),
    }
)

# %% ../nbs/03_Private_Modules/00_test_example.ipynb 13
dfs = {
    "nodes": nodes,
    "bars": bars,
    "point_loads": point_loads,
    "load_groups": load_groups,
}
